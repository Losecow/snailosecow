# O(g(n)) = f(n)

# 모든 n ≥ n0에 대하여

#  f(n) ≤ c × g(n)인

# 양의 상수 c와 n0가 존재한다


#  f(n) = a1n + a0 / 양의 정수 c, n0   주어짐


# f(n) = 7n + 7

# g(n) = n

# c = 8, n0 = 1

# f(1) = 14, c × g(1) = 8

# 모든 n >= 1(n0) 이
# f(n) ≤ c × g(n)
# 을 만족시켜야 하나

# 14 <= 8 * 1
# 따라서 만족 불가

# *만족 가능한지 여부를 살펴보려면
# 7 * n0 + 7 <= c * n0 이 만족되는지 알아보면 됨

# + ai 가 음수일 가능성
# 절댓값이 0 <= |ai| <= 100 이기 때문에
# 모든 n >= n0 이 성립하지 않을 수 있음

# a1 이 양수고 a0 이 음수일 경우/양수일 경우 ->
# (a1 - c) * n + a0 <= 0
# 이 경우 a0 의 값은 상관없고 a1 보다 c가 무조건 커야 함

# a1 이 음수고 a0 이 양수일 경우/양수일 경우 ->
# (a1 - c) * n + a0 <= 0
# 이 경우 a0 의 값은 상관없고 c 값도 상관없음

# a1 과 c 의 값이 같을 경우 ->
# a0의 값에 따라 결정 (같아도 됨)

# n의 값이 어떻게 되든 조건을 만족하는지 안하는지만 판별하는거니까

# 결론 : (a1 - c) * n + a0 <= 0 , a1 <= c 를 동시에 만족해야함

fa1, fa0 = map(int, input().split())
c = int(input())
n0 = int(input())

if (fa1 - c) * n0 + fa0 <= 0 and fa1 <= c:
    print(1)
else:
    print(0)